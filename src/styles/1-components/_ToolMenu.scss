@function colorBlockX($value) {
  @return round($value / 4);
}

@function colorBlockY($value) {
  @return round($value / 1.2);
}

#tool-menu {
  color: #fff;
  background: $gray;

  .tools, .tools-collapsed {
    padding: 4px;
    box-sizing: border-box;
    height: 100%;

    .tool {
      @extend %tool-menu-icon;
      &:hover { border-color: $lightgray; }
    }

    > .selected {  // selected tool
      border-color: $lightgray;
      background: $darkgray; 
    }
  }

  .tools {
    display: flex;
    flex-wrap: wrap;
    width: 72px;
  }

  > .color {

    > div:first-child {  // reset and swap container 
      display: flex;
      justify-content: center;
      .swap { 
        @extend %center-content;
        font-size: 10px; 
        padding: 2px;
        border: 1px solid transparent;
        border-radius: 2px;
        &:hover { border-color: gray }
      }
    }

    .colors, .colors-collapsed {
      margin: 0 auto; 
      > .color-block {
        margin: 0 auto;
        border: 1px solid #000;
        padding: 1px;
        background: #fff;
        > div {  // color
          width: 100%;
          height: 100%;
        }
      }
    }

    .colors {
      width: 60px;
      > .color-block {
        width: 28px;
        height: 28px;
        &:last-child { 
          transform: translate(colorBlockX(-28px), colorBlockY(-28px)); }
        &:first-child { 
          transform: translate(colorBlockX(28px), colorBlockY(28px)); }
      }
    }

    .colors-collapsed {
      width: 30px;
      > .color-block {
        width: 20px;
        height: 20px;
        &:last-child { 
          transform: translate(colorBlockX(-20px), colorBlockY(-20px)); }
        &:first-child { 
          transform: translate(colorBlockX(20px), colorBlockY(20px)); }
      }
    }
  }
}